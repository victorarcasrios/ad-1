
// This file has been generated by the GUI designer. Do not modify.
public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;
	private global::Gtk.Action goForwardAction;
	private global::Gtk.Action Action;
	private global::Gtk.Action refreshAction;
	private global::Gtk.Action closeAction;
	private global::Gtk.Action editAction;
	private global::Gtk.Action applyAction;
	private global::Gtk.Action goBackAction;
	private global::Gtk.VBox vboxMain;
	private global::Gtk.HBox hboxPwd;
	private global::Gtk.Label labelPwd;
	private global::Gtk.Entry entryPwd;
	private global::Gtk.Toolbar toolBarPwd;
	private global::Gtk.HBox hboxEdit;
	private global::Gtk.Toolbar toolBarEdit1;
	private global::Gtk.Toolbar toolBarEdit2;
	private global::Gtk.VBox vboxTable;
	private global::Gtk.HBox hboxToolBar;
	private global::Gtk.Toolbar toolBar1;
	private global::Gtk.Toolbar toolBar2;
	private global::Gtk.ScrolledWindow GtkScrolledWindow1;
	private global::Gtk.TreeView treeView;
	private global::Gtk.VBox vboxEdit;
	private global::Gtk.ScrolledWindow GtkScrolledWindow;
	private global::Gtk.TextView textView;

	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager ();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
		this.goForwardAction = new global::Gtk.Action ("goForwardAction", global::Mono.Unix.Catalog.GetString ("Actualizar"), null, "gtk-go-forward");
		this.goForwardAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Actualizar");
		w1.Add (this.goForwardAction, null);
		this.Action = new global::Gtk.Action ("Action", null, null, null);
		w1.Add (this.Action, null);
		this.refreshAction = new global::Gtk.Action ("refreshAction", global::Mono.Unix.Catalog.GetString ("Actualizar"), null, "gtk-refresh");
		this.refreshAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Actualizar");
		w1.Add (this.refreshAction, null);
		this.closeAction = new global::Gtk.Action ("closeAction", global::Mono.Unix.Catalog.GetString ("Vaciar"), null, "gtk-close");
		this.closeAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Vaciar");
		w1.Add (this.closeAction, null);
		this.editAction = new global::Gtk.Action ("editAction", global::Mono.Unix.Catalog.GetString ("Editar"), null, "gtk-edit");
		this.editAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Editar");
		w1.Add (this.editAction, null);
		this.applyAction = new global::Gtk.Action ("applyAction", global::Mono.Unix.Catalog.GetString ("Aplicar"), null, "gtk-apply");
		this.applyAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Aplicar");
		w1.Add (this.applyAction, null);
		this.goBackAction = new global::Gtk.Action ("goBackAction", null, null, "gtk-go-back");
		w1.Add (this.goBackAction, null);
		this.UIManager.InsertActionGroup (w1, 0);
		this.AddAccelGroup (this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("MainWindow");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		this.DefaultWidth = 300;
		this.DefaultHeight = 50;
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.vboxMain = new global::Gtk.VBox ();
		this.vboxMain.Name = "vboxMain";
		this.vboxMain.Spacing = 6;
		// Container child vboxMain.Gtk.Box+BoxChild
		this.hboxPwd = new global::Gtk.HBox ();
		this.hboxPwd.Name = "hboxPwd";
		this.hboxPwd.Spacing = 6;
		// Container child hboxPwd.Gtk.Box+BoxChild
		this.labelPwd = new global::Gtk.Label ();
		this.labelPwd.Name = "labelPwd";
		this.labelPwd.LabelProp = global::Mono.Unix.Catalog.GetString ("Contraseña");
		this.hboxPwd.Add (this.labelPwd);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hboxPwd [this.labelPwd]));
		w2.Position = 0;
		w2.Expand = false;
		w2.Fill = false;
		// Container child hboxPwd.Gtk.Box+BoxChild
		this.entryPwd = new global::Gtk.Entry ();
		this.entryPwd.CanFocus = true;
		this.entryPwd.Name = "entryPwd";
		this.entryPwd.IsEditable = true;
		this.entryPwd.InvisibleChar = '•';
		this.hboxPwd.Add (this.entryPwd);
		global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hboxPwd [this.entryPwd]));
		w3.Position = 1;
		// Container child hboxPwd.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><toolbar name='toolBarPwd'><toolitem name='goForwardAction' action='goForwardAction'/></toolbar></ui>");
		this.toolBarPwd = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/toolBarPwd")));
		this.toolBarPwd.Name = "toolBarPwd";
		this.toolBarPwd.ShowArrow = false;
		this.hboxPwd.Add (this.toolBarPwd);
		global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hboxPwd [this.toolBarPwd]));
		w4.Position = 2;
		w4.Expand = false;
		this.vboxMain.Add (this.hboxPwd);
		global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vboxMain [this.hboxPwd]));
		w5.Position = 0;
		w5.Expand = false;
		w5.Fill = false;
		// Container child vboxMain.Gtk.Box+BoxChild
		this.hboxEdit = new global::Gtk.HBox ();
		this.hboxEdit.Name = "hboxEdit";
		this.hboxEdit.Spacing = 6;
		// Container child hboxEdit.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><toolbar name='toolBarEdit1'><toolitem name='applyAction' action='applyAction'/></toolbar></ui>");
		this.toolBarEdit1 = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/toolBarEdit1")));
		this.toolBarEdit1.Name = "toolBarEdit1";
		this.toolBarEdit1.ShowArrow = false;
		this.hboxEdit.Add (this.toolBarEdit1);
		global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.hboxEdit [this.toolBarEdit1]));
		w6.Position = 0;
		// Container child hboxEdit.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><toolbar name='toolBarEdit2'><toolitem name='goBackAction' action='goBackAction'/></toolbar></ui>");
		this.toolBarEdit2 = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/toolBarEdit2")));
		this.toolBarEdit2.Name = "toolBarEdit2";
		this.toolBarEdit2.ShowArrow = false;
		this.hboxEdit.Add (this.toolBarEdit2);
		global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.hboxEdit [this.toolBarEdit2]));
		w7.Position = 1;
		w7.Expand = false;
		this.vboxMain.Add (this.hboxEdit);
		global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.vboxMain [this.hboxEdit]));
		w8.Position = 1;
		w8.Expand = false;
		w8.Fill = false;
		// Container child vboxMain.Gtk.Box+BoxChild
		this.vboxTable = new global::Gtk.VBox ();
		this.vboxTable.Name = "vboxTable";
		this.vboxTable.Spacing = 6;
		// Container child vboxTable.Gtk.Box+BoxChild
		this.hboxToolBar = new global::Gtk.HBox ();
		this.hboxToolBar.Name = "hboxToolBar";
		this.hboxToolBar.Spacing = 6;
		// Container child hboxToolBar.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><toolbar name='toolBar1'><toolitem name='editAction' action='editAction'/></toolbar></ui>");
		this.toolBar1 = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/toolBar1")));
		this.toolBar1.Name = "toolBar1";
		this.toolBar1.ShowArrow = false;
		this.hboxToolBar.Add (this.toolBar1);
		global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.hboxToolBar [this.toolBar1]));
		w9.Position = 0;
		// Container child hboxToolBar.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><toolbar name='toolBar2'><toolitem name='refreshAction' action='refreshAction'/><separator/><toolitem name='closeAction' action='closeAction'/></toolbar></ui>");
		this.toolBar2 = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/toolBar2")));
		this.toolBar2.Name = "toolBar2";
		this.toolBar2.ShowArrow = false;
		this.hboxToolBar.Add (this.toolBar2);
		global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.hboxToolBar [this.toolBar2]));
		w10.Position = 1;
		w10.Expand = false;
		this.vboxTable.Add (this.hboxToolBar);
		global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.vboxTable [this.hboxToolBar]));
		w11.Position = 0;
		w11.Expand = false;
		w11.Fill = false;
		// Container child vboxTable.Gtk.Box+BoxChild
		this.GtkScrolledWindow1 = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow1.Name = "GtkScrolledWindow1";
		this.GtkScrolledWindow1.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow1.Gtk.Container+ContainerChild
		this.treeView = new global::Gtk.TreeView ();
		this.treeView.CanFocus = true;
		this.treeView.Name = "treeView";
		this.GtkScrolledWindow1.Add (this.treeView);
		this.vboxTable.Add (this.GtkScrolledWindow1);
		global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.vboxTable [this.GtkScrolledWindow1]));
		w13.Position = 1;
		this.vboxMain.Add (this.vboxTable);
		global::Gtk.Box.BoxChild w14 = ((global::Gtk.Box.BoxChild)(this.vboxMain [this.vboxTable]));
		w14.Position = 2;
		// Container child vboxMain.Gtk.Box+BoxChild
		this.vboxEdit = new global::Gtk.VBox ();
		this.vboxEdit.Name = "vboxEdit";
		this.vboxEdit.Spacing = 6;
		// Container child vboxEdit.Gtk.Box+BoxChild
		this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow.Name = "GtkScrolledWindow";
		this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
		this.textView = new global::Gtk.TextView ();
		this.textView.CanFocus = true;
		this.textView.Name = "textView";
		this.textView.Overwrite = true;
		this.GtkScrolledWindow.Add (this.textView);
		this.vboxEdit.Add (this.GtkScrolledWindow);
		global::Gtk.Box.BoxChild w16 = ((global::Gtk.Box.BoxChild)(this.vboxEdit [this.GtkScrolledWindow]));
		w16.Position = 0;
		this.vboxMain.Add (this.vboxEdit);
		global::Gtk.Box.BoxChild w17 = ((global::Gtk.Box.BoxChild)(this.vboxMain [this.vboxEdit]));
		w17.Position = 3;
		this.Add (this.vboxMain);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.hboxEdit.Hide ();
		this.vboxTable.Hide ();
		this.vboxEdit.Hide ();
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.goForwardAction.Activated += new global::System.EventHandler (this.OnGoForwardActionActivated);
		this.refreshAction.Activated += new global::System.EventHandler (this.OnRefreshActionActivated);
		this.closeAction.Activated += new global::System.EventHandler (this.OnCloseActionActivated);
		this.editAction.Activated += new global::System.EventHandler (this.OnEditActionActivated);
		this.applyAction.Activated += new global::System.EventHandler (this.OnApplyActionActivated);
		this.goBackAction.Activated += new global::System.EventHandler (this.OnGoBackActionActivated);
	}
}
